receivers:
  # OTLP receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Additional receivers (optional)
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor to improve performance
  batch:
    timeout: 5s
    send_batch_size: 1000

exporters:
  # Loki exporter for logs
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    labels:
      resource:
        - "service.name"
        - "service.namespace"
      record:
        - "severity"
    tenant_id: "your-tenant-id" # Optional, if using multi-tenancy

  # Tempo exporter for traces
  tempo:
    endpoint: tempo:55680
    # headers:
      # authorization: "Bearer <your-token>" # Optional, if authentication is required

  # Prometheus exporter for metrics (Mimir is Prometheus-compatible)
  prometheusremotewrite:
    endpoint: http://mimir:9009/api/v1/push
    # headers:
      # authorization: "Bearer <your-token>" # Optional, if authentication is required

service:
  pipelines:
    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [loki]

    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [tempo]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [batch]
      exporters: [prometheusremotewrite]